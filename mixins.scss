@mixin radial-gradient($color1, $position1, $color2, $position2) {
	background: $color1;
	background: -moz-radial-gradient(center, ellipse cover,  $color1 $position1, $color2 $position2);
	background: -webkit-gradient(radial, center center, 0px, center center, $position2, color-stop($position1,$color1), color-stop($position2,$color2));
	background: -webkit-radial-gradient(center, ellipse cover,  $color1 $position1,$color2 $position2);
	background: -o-radial-gradient(center, ellipse cover,  $color1 $position1,$color2 $position2);
	background: -ms-radial-gradient(center, ellipse cover,  $color1 $position1,$color2 $position2);
	background: radial-gradient(ellipse at center,  $color1 $position1,$color2 $position2);
/* 	filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='$color1', endColorstr='$color2',GradientType=1 ); */
};

@mixin prefix($name, $argument) {
  -webkit-#{$name}: #{$argument};
  -ms-#{$name}: #{$argument};
  -moz-#{$name}: #{$argument};
  -o-#{$name}: #{$argument};
  #{$name}: #{$argument};
}

@mixin media-max($width) {
	@media screen and (max-width: $width) { @content }
}

@mixin media-min($width) {
	@media screen and (min-width: $width) { @content }
}

@mixin media-min-max($min, $max) {
	@media screen and (min-width: $min) and (max-width: $max) { @content }
}

@mixin retina() {
	@media only screen and (-webkit-min-device-pixel-ratio: 1.3), only screen and (-o-min-device-pixel-ratio: 13/10), only screen and (min-resolution: 120dpi) { @content }
}

@mixin clear {
	&:after {
		content: "";
		display: block;
		clear: both;
		height: 0;
	}
}
